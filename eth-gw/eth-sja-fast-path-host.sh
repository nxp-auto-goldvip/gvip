#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-3-Clause
#
# Copyright 2020-2021 NXP
#
# This script implements the host machine logic for the L2 forwarding fast path scenario.
#
# The fast path scenario demonstrates that the traffic can flow solely through
# the SJA1110 switch, without any Linux netstack or PFE interaction. 
#
# The host is implied to have 2 network adapters available in order to handle TCP/UDP segments 
# injected via iperf3 by the target machine. The target CPU load metric is available under a report
# generated by the "sar" Linux utility. This script will take care of setting up the L3 route 
# between the  two interfaces belonging to separate network namespaces.

# shellcheck source=linux/eth-gw/eth-common-host.sh
source "${BASH_SOURCE[0]%/*}/eth-common-host.sh"

# Set route between namespaces
_set_route() {
    local namespace=$1
    local interface=$2
    local ip=$3

    if [ "${ip}" = "10.0.1.1" ]; then
        ip netns exec "${namespace}" ip route add "192.168.100.0/24" dev "${interface}"
    else
        ip netns exec "${namespace}" ip route add "10.0.1.0/24" dev "${interface}"
    fi
}

# Setup L3 routing for the local host interfaces
setup_l3_router() {
    ip_eth0="10.0.1.1"
    ip_eth1="192.168.100.1"

    echo "Setting IP ${ip_eth0} to ${eth_interface0} in nw_ns0"
    _set_ip_for_netns "nw_ns0" "${eth_interface0}" "${ip_eth0}"
    _set_route "nw_ns0" "${eth_interface0}" "${ip_eth0}"

    echo "Setting IP ${ip_eth1} to ${eth_interface1} in nw_ns1"
    _set_ip_for_netns "nw_ns1" "${eth_interface1}" "${ip_eth1}"
    _set_route "nw_ns1" "${eth_interface1}" "${ip_eth1}"
}

set_trap
check_input "$@"
setup_host
run_test
show_log
clean_up
